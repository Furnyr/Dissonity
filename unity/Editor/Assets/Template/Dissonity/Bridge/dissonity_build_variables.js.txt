(()=>{"use strict";var i={d:(r,t)=>{for(var e in t)i.o(t,e)&&!i.o(r,e)&&Object.defineProperty(r,e,{enumerable:!0,get:t[e]})},o:(i,r)=>Object.prototype.hasOwnProperty.call(i,r),r:i=>{'undefined'!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(i,Symbol.toStringTag,{value:'Module'}),Object.defineProperty(i,'__esModule',{value:!0})}},r={};i.r(r),i.d(r,{default:()=>t});class t{#i='[[[ DISABLE_INFO_LOGS ]]]§';#r='[[[ LAZY_HIRPC_LOAD ]]]§';#t='[[[ CLIENT_ID ]]]§';#e='[[[ DISABLE_CONSOLE_LOG_OVERRIDE ]]]§';#s='[[[ MAPPINGS ]]]§';#_='[[[ PATCH_URL_MAPPINGS_CONFIG ]]]§';#a='[[[ OAUTH_SCOPES ]]]§';#E='[[[ TOKEN_REQUEST_PATH ]]]§';#l='[[[ SERVER_REQUEST ]]]§';constructor(){this.DISABLE_INFO_LOGS=this.#O(this.#i,"boolean"),this.LAZY_HIRPC_LOAD=this.#O(this.#r,"boolean"),this.CLIENT_ID=this.#O(this.#t,"string"),this.DISABLE_CONSOLE_LOG_OVERRIDE=this.#O(this.#e,"boolean"),this.MAPPINGS=this.#O(this.#s,"json_array"),this.PATCH_URL_MAPPINGS_CONFIG=this.#O(this.#_,"json"),this.OAUTH_SCOPES=this.#O(this.#a,"string[]"),this.TOKEN_REQUEST_PATH=this.#O(this.#E,"string"),this.SERVER_REQUEST=this.#O(this.#l,"string")}#O(i,r){let t;try{t=i.split("]]] ")[1].slice(0,-1)}catch(i){throw new Error("Build variable undefined")}if("string"==r)return t;if("boolean"==r){if(/1|true/i.test(i))return!0;if(/0|false/i.test(i))return!1;throw new Error("Invalid boolean string")}if("string[]"==r){const i=t.split(",");return 1==i.length&&""==i[0]?[]:i}if("json"==r||"json_array"==r)try{return JSON.parse(t)}catch(i){return"json_array"==r?[]:null}throw new Error("Invalid parse type")}}(self.Dissonity=self.Dissonity||{}).BuildVariables=r})();