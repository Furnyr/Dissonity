(()=>{"use strict";var r={d:(i,t)=>{for(var e in t)r.o(t,e)&&!r.o(i,e)&&Object.defineProperty(i,e,{enumerable:!0,get:t[e]})},o:(r,i)=>Object.prototype.hasOwnProperty.call(r,i),r:r=>{'undefined'!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(r,Symbol.toStringTag,{value:'Module'}),Object.defineProperty(r,'__esModule',{value:!0})}},i={};r.r(i),r.d(i,{default:()=>t});class t{#r='[[[ DISABLE_INFO_LOGS ]]]§';#i='[[[ CLIENT_ID ]]]§';#t='[[[ DISABLE_CONSOLE_LOG_OVERRIDE ]]]§';#e='[[[ MAPPINGS ]]]§';#s='[[[ PATCH_URL_MAPPINGS_CONFIG ]]]§';#a='[[[ OAUTH_SCOPES ]]]§';#E='[[[ TOKEN_REQUEST_PATH ]]]§';#_='[[[ SERVER_REQUEST ]]]§';constructor(){this.DISABLE_INFO_LOGS=this.#l(this.#r,"boolean"),this.CLIENT_ID=this.#l(this.#i,"string"),this.DISABLE_CONSOLE_LOG_OVERRIDE=this.#l(this.#t,"boolean"),this.MAPPINGS=this.#l(this.#e,"json_array"),this.PATCH_URL_MAPPINGS_CONFIG=this.#l(this.#s,"json"),this.OAUTH_SCOPES=this.#l(this.#a,"string[]"),this.TOKEN_REQUEST_PATH=this.#l(this.#E,"string"),this.SERVER_REQUEST=this.#l(this.#_,"string")}#l(r,i){let t;try{t=r.split("]]] ")[1].slice(0,-1)}catch(r){throw new Error("Build variable undefined")}if("string"==i)return t;if("boolean"==i){if(/1|true/i.test(r))return!0;if(/0|false/i.test(r))return!1;throw new Error("Invalid boolean string")}if("string[]"==i){const r=t.split(",");return 1==r.length&&""==r[0]?[]:r}if("json"==i||"json_array"==i)try{return JSON.parse(t)}catch(r){return"json_array"==i?[]:null}throw new Error("Invalid parse type")}}(self.Dissonity=self.Dissonity||{}).BuildVariables=i})();