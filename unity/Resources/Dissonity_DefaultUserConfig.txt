using Dissonity;
using Dissonity.Models;
using Dissonity.Models.Builders;

[DissonityConfig]
public class DissonityUserConfiguration : SdkConfiguration<MyServerRequest, MyServerResponse>
{
    // Hover over properties for more information!

    // Initialization
    public override long ClientId => 0;

    public override string[] OauthScopes => new string[] { OauthScope.Identify, /*, your-oauth-scopes*/ };

    public override string TokenRequestPath => "/api/token";

    // Logging
    public override bool DisableDissonityInfoLogs => false;
    
    // If you want to call PatchUrlMappings before initialization, use this setting
    /*public override MappingBuilder[] Mappings => new MappingBuilder[] {
        new()
        {
            Prefix = "/foo",
            Target = "foo.com"
        }
    };*/

    // Utils
    public override bool SynchronizeUser => false;
    public override bool SynchronizeGuildMemberRpc => false;

    // App resolution
    public override ScreenResolution DesktopResolution => ScreenResolution.Viewport;
    public override ScreenResolution MobileResolution => ScreenResolution.Dynamic;
    public override ScreenResolution WebResolution => ScreenResolution.Dynamic;
}

// If you want to get or send data to your server while authenticating, define it here.
// You can access the response object in the Api.Initialize return value.
public class MyServerRequest : ServerTokenRequest {}
public class MyServerResponse : ServerTokenResponse {}